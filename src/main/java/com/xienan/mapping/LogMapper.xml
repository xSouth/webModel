<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xienan.dao.LogMapper" >
  <resultMap id="BaseResultMap" type="com.xienan.model.Log" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="operate_name" property="operateName" jdbcType="VARCHAR" />
    <result column="operate_type" property="operateType" jdbcType="VARCHAR" />
    <result column="operate_ip" property="operateIp" jdbcType="VARCHAR" />
    <result column="operate_date" property="operateDate" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="insert_arer" property="insertArer" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, operate_name, operate_type, operate_ip, operate_date, remark, insert_arer
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bj_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bj_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xienan.model.Log" >
    insert into bj_log (log_id, operate_name, operate_type, 
      operate_ip, operate_date, remark, 
      insert_arer)
    values (#{logId,jdbcType=BIGINT}, #{operateName,jdbcType=VARCHAR}, #{operateType,jdbcType=VARCHAR}, 
      #{operateIp,jdbcType=VARCHAR}, #{operateDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{insertArer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xienan.model.Log" >
    insert into bj_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="operateName != null" >
        operate_name,
      </if>
      <if test="operateType != null" >
        operate_type,
      </if>
      <if test="operateIp != null" >
        operate_ip,
      </if>
      <if test="operateDate != null" >
        operate_date,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="insertArer != null" >
        insert_arer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="operateName != null" >
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null" >
        #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null" >
        #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertArer != null" >
        #{insertArer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xienan.model.Log" >
    update bj_log
    <set >
      <if test="operateName != null" >
        operate_name = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        operate_type = #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null" >
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null" >
        operate_date = #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertArer != null" >
        insert_arer = #{insertArer,jdbcType=VARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xienan.model.Log" >
    update bj_log
    set operate_name = #{operateName,jdbcType=VARCHAR},
      operate_type = #{operateType,jdbcType=VARCHAR},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_date = #{operateDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      insert_arer = #{insertArer,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>